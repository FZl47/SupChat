# Generated by Django 3.2 on 2022-09-13 19:54

import SupChat.core.tools
import SupChat.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=SupChat.models.upload_image_admin_chat)),
                ('lastSeen', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_online', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline')], default='offline', max_length=10)),
                ('is_busy', models.BooleanField(default=False)),
                ('group_name', models.CharField(default='Group_Admin_<function RandomString at 0x0000025962214430>', editable=False, max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='BlackList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=50)),
                ('phone_or_email', models.CharField(blank=True, max_length=150, null=True)),
                ('reason', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ChatGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('type_close', models.CharField(blank=True, choices=[('closed_by_user', 'Closed by User'), ('closed_by_admin', 'Closed by Admin'), ('closed_auto', 'Closed Automatically')], max_length=30, null=True)),
                ('rate_chat', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.admin')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time_send', models.DateTimeField(auto_now_add=True)),
                ('sender', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], max_length=10)),
                ('seen', models.BooleanField(default=False)),
                ('edited', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.chatgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupChatConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('fa', 'فارسی'), ('en', 'english')], default='fa', max_length=3)),
                ('transfer_chat_is_active', models.BooleanField(default=True)),
                ('default_message_is_active', models.BooleanField(default=True)),
                ('default_message', models.CharField(blank=True, default=' پشتیبانی سایت ما در کوتاه ترین زمان ممکن پاسخگوی شما دوست عزیز است لطفا پیام خود را بگذارید .', max_length=200, null=True)),
                ('notif_message_is_active', models.BooleanField(default=True)),
                ('notif_message_show_after', models.IntegerField(default=5, help_text='پس از گذشت چند ثانیه نمایش داده شود')),
                ('notif_message', models.CharField(blank=True, default='سلام ، چطور میتوانم کمک کنم ؟', max_length=200, null=True)),
                ('end_chat_auto', models.BooleanField(default=True)),
                ('end_chat_after', models.IntegerField(default=60, help_text='پس از مدتی بدون فعالیت چت به صورت خودکار بسته میشود')),
                ('show_title_section', models.BooleanField(default=True)),
                ('show_last_seen', models.BooleanField(default=True)),
                ('show_seen_message', models.BooleanField(default=True)),
                ('can_delete_message', models.BooleanField(default=True)),
                ('can_edit_message', models.BooleanField(default=True)),
                ('get_phone_or_email', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SupChatStyle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background_chat', models.ImageField(blank=True, null=True, upload_to=SupChat.models.upload_image_background_chat)),
                ('theme', models.CharField(choices=[('/supchat/css/theme/default.css', 'default')], default='/supchat/css/theme/default.css', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AudioMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='SupChat.message')),
                ('type', models.CharField(default='audio', editable=False, max_length=5)),
                ('audio', models.FileField(upload_to=SupChat.models.upload_audio_message)),
                ('audio_time', models.CharField(default='0', max_length=5)),
            ],
            options={
                'abstract': False,
            },
            bases=('SupChat.message',),
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='SupChat.message')),
                ('type', models.CharField(default='text', editable=False, max_length=5)),
                ('text', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('SupChat.message',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(default=SupChat.core.tools.RandomString, max_length=50)),
                ('phone_or_email', models.CharField(blank=True, max_length=150, null=True)),
                ('last_seen', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('status_online', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline')], default='offline', max_length=10)),
                ('group_name', models.CharField(default='Group_User_<function RandomString at 0x0000025962214430>', editable=False, max_length=40)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SupChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='ساپ چت', max_length=30)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.supchatconfig')),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.supchatstyle')),
            ],
        ),
        migrations.CreateModel(
            name='SuggestedMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('section', models.ManyToManyField(to='SupChat.Section')),
            ],
        ),
        migrations.CreateModel(
            name='LogMessageAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('message', models.TextField()),
                ('date_time_submit', models.DateTimeField(auto_now_add=True)),
                ('seen', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.admin')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='chatgroup',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.section'),
        ),
        migrations.AddField(
            model_name='chatgroup',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupChat.user'),
        ),
        migrations.AddField(
            model_name='admin',
            name='sections',
            field=models.ManyToManyField(to='SupChat.Section'),
        ),
        migrations.AddField(
            model_name='admin',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
